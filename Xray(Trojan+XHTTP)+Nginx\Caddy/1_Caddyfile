{
	order reverse_proxy before route
	admin off
	persist_config off
	log {
		output file /var/log/caddy/error.log #错误日志的文件地址
		format console
		level ERROR
	}
	log log0 {
		output file /var/log/caddy/access.log #访问日志的文件地址
		format console
		include http.log.access.log0
	} #访问日志的输出配置。（选配）

	email your@email.com #修改为自己的电子邮箱。（选配）

	servers :443 {
		trusted_proxies cloudflare { #cloudflare 为使用 cloudflare ips，由 caddy-cloudflare-ip 插件提供。
			interval 12h
			timeout 15s
		} #配置可信代理服务器的 IP 范围，实现获取客户端真实 IP。若使用非 Cloudflare CDN，需自己调整 trusted_proxies 配置。
		protocols h1 h2 h3 #默认配置。（可省略）
	}
}

:443, z1.xx.yy, h3.xx.yy { #z1.xx.yy 与 h3.xx.yy 修改为自己的域名。注意：逗号与域名之间有一个空格。
	tls {
		ciphers TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
		curves x25519 secp521r1 secp384r1 secp256r1
	}

	log log0 #访问日志的启用配置。（选配）

	reverse_proxy /TSpLdG9k/* 127.0.0.1:2020 { #与 Trojan+XHTTP 应用中 path 对应，转发给本机 Trojan+XHTTP 监听端口。
		flush_interval -1
		transport http {
			versions h2c 2
		}
	}

	@host {
		host z1.xx.yy h3.xx.yy #限定域名访问（包括禁止以 IP 方式访问网站），修改为自己的域名。
	}
	route @host {
		header {
			Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" #启用 HSTS
		}
		file_server {
			root /var/www/html #修改为自己存放的 WEB 文件路径
		}
	}
}
#备注：
#1、申请免费 TLS 证书的域名不要超过五个，否则影响 TLS 证书的更新。
#2、本配置仅支持申请普通 TLS 证书，若要申请通配符 TLS 证书请参考 ‘Caddy(Other Configuration) （Caddy 的特殊应用配置方法。）’ 中对应介绍及对应配置示例。
#3、本示例使用不同域名来区分正常应用（h3.xx.yy）与 CDN 流量中转（z1.xx.yy）应用。
